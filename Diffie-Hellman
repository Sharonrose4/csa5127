#include <stdio.h>
#include <stdlib.h>
#include <math.h>

long long power(long long base, long long exp, long long mod) {
    long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1)
            result = (result * base) % mod;
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}

int main() {
   
    long long p = 23;     // prime number
    long long g = 5;      // primitive root modulo p


    long long a = 6;
    long long A = power(g, a, p);  // Alice's public key

    long long b = 15;
    long long B = power(g, b, p);  // Bob's public key

    long long secretA = power(B, a, p);  // Alice computes
    long long secretB = power(A, b, p);  // Bob computes

    printf("Public prime (p): %lld\n", p);
    printf("Primitive root (g): %lld\n\n", g);

    printf("Alice's Public Key: %lld\n", A);
    printf("Bob's Public Key: %lld\n\n", B);

    printf("Shared Secret (Alice computes): %lld\n", secretA);
    printf("Shared Secret (Bob computes):   %lld\n", secretB);

    return 0;
}
